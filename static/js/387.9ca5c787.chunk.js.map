{"version":3,"file":"static/js/387.9ca5c787.chunk.js","mappings":"0JASA,UATgB,WAEd,OACE,gBAAKA,UAAU,UAAS,UACtB,gBAAKC,IAAI,gBAAgBC,IAAI,aAGnC,C,kGCPMC,EAAW,wB,SC8DjB,MAzDA,SAAe,GAAqB,IAApBC,EAAK,EAALA,MAAOC,EAAS,EAATA,UACrB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAsBtBC,EAAmB,SAACC,GAExB,GADAA,EAAEC,kBACGD,EAAEE,OAAOC,QAAS,EDDD,SAACC,EAAKC,EAAIC,GAClCC,MAAM,GAAD,OAAIH,GAAG,OAAGC,GAAM,CACnBG,OAAQ,QACRC,QAAS,CAAC,eAAiB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEtBO,MAAK,WACJC,OAAOC,SAASC,KAAI,UAnCP,gCAmCqB,OAAGX,EACvC,IACCY,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,EACvB,GACF,CCNMG,CAAW,+BAJFrB,EAAEE,OAAOG,GACA,CAChBiB,OAAQ,QAGZ,CACF,EAED,OACC,iBAAKhC,UAAU,QAAO,UACjBK,IAAc,SAAC4B,EAAA,QAAO,KAC1B,kBAAMjC,UAAU,cAAa,WAC5B,kBAAOkC,KAAK,OAAOC,KAAK,GAAGpB,GAAG,GAAGqB,YAAY,4FAAsBC,QAnC9C,SAAC3B,GACtBA,EAAEC,iBACFH,EAAYE,EAAEE,OAAO0B,MACvB,KAiCE,mBAAQJ,KAAK,SAASlC,UAAU,gBAAgBuC,QA/B3B,SAAC7B,GAEtB,GADAA,EAAEC,iBACe,KAAbJ,EAAiB,CAEnB,IAAMiC,EAAY,CAChBC,UAAU,IAAIC,MAAOC,qBACrBC,KAAMrC,EACNyB,OAAQ,ODjBiBhB,ECoBiBwB,EDnBhDvB,MCmBgB,+BDnBL,CACTC,OAAQ,OACRC,QAAS,CAAC,eAAiB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEtBO,MAAK,WACJC,OAAOC,SAASC,KAAOvB,CACzB,IACCwB,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,EACvB,ICUIpB,EAAY,GACd,CDtBuB,IAAMQ,CCuB/B,EAkB0E,UACvE,cAAGhB,UAAU,mBAAkB,qBAGjC,eAAIA,UAAU,cAAa,SACrBI,GAASA,EAAMyC,KAAI,SAAAD,GAAI,OACtB,gBAAI5C,UAAU,oBAAmB,WAC/B,kBAAOkC,KAAK,WAAWnB,GAAI6B,EAAK7B,GAAIoB,KAAK,GAAGG,MAAM,IAAIzB,QAAyB,SAAhB+B,EAAKZ,OAAiCc,SAAUrC,KAC/G,mBAAOsC,QAASH,EAAK7B,GAAG,UACrB6B,EAAKA,MAAK,yBAHwBA,EAAK7B,GAKvC,QAKf,C","sources":["components/Loading.js","util/api.js","components/Todos.js"],"sourcesContent":["const Loading = () => {\n\n  return (\n    <div className=\"loading\">\n      <img src=\"./loading.gif\" alt=\"loading\" />\n    </div>\n  );\n}\n\nexport default Loading; ","const BASE_URL = 'http://localhost:3000'\nconst TODO_URL = 'http://localhost:3000/todos/'\n\nexport const fetchCreate = (url, data) => {\n  fetch(url, {\n    method: \"POST\",\n    headers: {\"Content-Type\" : \"application/json\"},\n    body: JSON.stringify(data)\n  })\n  .then(() => {\n    window.location.href = BASE_URL\n  })\n  .catch((err) => {\n    console.log('Error', err)\n  })\n}\n\nexport const fetchDelete = (url, id) => {\n  fetch(`${url}${id}`, {\n    method: \"DELETE\",\n  })\n  .then(() => {\n    window.location.href = BASE_URL\n  })\n  .catch((err) => {\n    console.log('Error', err)\n  })\n}\n\nexport const fetchPatch = (url, id, data) => {\n  fetch(`${url}${id}`, {\n    method: \"PATCH\",\n    headers: {\"Content-Type\" : \"application/json\"},\n    body: JSON.stringify(data),\n  })\n  .then(() => {\n    window.location.href = `${TODO_URL}${id}`;\n  })\n  .catch((err) => {\n    console.log('Error', err)\n  })\n}","import './todos.css'\nimport { useState } from 'react';\nimport Loading from './Loading'\nimport { fetchCreate, fetchPatch } from '../util/api'\n\nfunction Todos({todos, isPending}) {\n  const [todoText, setTodoText] = useState('');\n\n  const changeTodoText = (e) => {\n    e.preventDefault()\n    setTodoText(e.target.value)\n  }\n\n  const submitTodoItem = (e) => {\n    e.preventDefault()\n    if (todoText !== '') {\n  \n      const fetchData = { \n        createAt: new Date().toLocaleDateString(),\n        todo: todoText,\n        status: \"yet\" \n      }\n  \n      fetchCreate('http://localhost:3001/todos/', fetchData)\n      setTodoText('')\n    }\n  }\n\n  const changeTodoStatus = (e) => {\n    e.preventDefault()\n    if (!e.target.checked) {\n      let id = e.target.id\n      const fetchData = {\n        status: \"done\"\n      }\n      fetchPatch('http://localhost:3001/todos/', id, fetchData)\n    }\n  }\n\n\treturn (\n\t\t<div className=\"todos\">\n      {isPending  && <Loading />}\n\t\t\t<form className=\"todos__task\">\n\t\t\t\t<input type=\"text\" name=\"\" id=\"\" placeholder=\"지금 당장 시작할 일은 무엇인가요?\" onKeyUp={changeTodoText} />\n\t\t\t\t<button type=\"submit\" className=\"todos__submit\" onClick={submitTodoItem}>\n\t\t\t\t\t<i className=\"fa-solid fa-plus\">+</i>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<ul className=\"todos__list\">\n        {todos && todos.map(todo => (\n          <li className=\"todos__list--item\" key={todo.id}>\n            <input type=\"checkbox\" id={todo.id} name=\"\" value=\"1\" checked={todo.status === \"done\"? true : false} onChange={changeTodoStatus} />\n            <label htmlFor={todo.id}>\n              {todo.todo}<span></span>\n            </label>\n          </li>\n        ))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Todos\n"],"names":["className","src","alt","BASE_URL","todos","isPending","useState","todoText","setTodoText","changeTodoStatus","e","preventDefault","target","checked","url","id","data","fetch","method","headers","body","JSON","stringify","then","window","location","href","catch","err","console","log","fetchPatch","status","Loading","type","name","placeholder","onKeyUp","value","onClick","fetchData","createAt","Date","toLocaleDateString","todo","map","onChange","htmlFor"],"sourceRoot":""}